<script is:inline>
  const API_URL = import.meta.env.PUBLIC_API_URL;

  window.silentTokenRefresh = async function () {
    const refresh = localStorage.getItem("refresh_token");

    if (!refresh) {
      console.warn("No refresh token disponible.");
      return;
    }

    try {
      console.log("Intentando refrescar el token...");
      const res = await fetch(`${API_URL}/api/auth/token/refresh/`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ refresh }),
      });

      if (res.ok) {
        const data = await res.json();
        localStorage.setItem("access_token", data.access);
        if (data.refresh) {
          localStorage.setItem("refresh_token", data.refresh);
        }
        console.info("Access token refrescado en segundo plano.");
      } else {
        console.warn("No se pudo refrescar el token. Cerrando sesiÃ³n.");
        logout();
      }
    } catch (err) {
      console.error("Error al refrescar el token:", err);
      logout();
    }
  };

  // ðŸ‘‡ Resto del script igual que lo tenÃ­as
  let timeout;
  const INACTIVITY_LIMIT = 10 * 60 * 1000;
  const REFRESH_INTERVAL = 7 * 60 * 1000;
  const ACTIVE_THRESHOLD = 9 * 60 * 1000;
  let lastActivity = Date.now();

  function logout() {
    localStorage.removeItem("access_token");
    localStorage.removeItem("refresh_token");
    localStorage.removeItem("username");
    window.location.href = "/";
  }

  function resetInactivityTimer() {
    clearTimeout(timeout);
    timeout = setTimeout(() => {
      console.warn("SesiÃ³n expirada por inactividad.");
      logout();
    }, INACTIVITY_LIMIT);
    lastActivity = Date.now();
  }

  ["click", "mousemove", "keydown", "scroll", "touchstart"].forEach((event) => {
    window.addEventListener(event, resetInactivityTimer);
  });

  resetInactivityTimer();

  setInterval(async () => {
    const timeSinceLastActivity = Date.now() - lastActivity;
    if (timeSinceLastActivity < ACTIVE_THRESHOLD) {
      console.log("Usuario activo. Refrescando token...");
      await window.silentTokenRefresh();
    } else {
      console.log("Usuario inactivo. No se refresca token.");
    }
  }, REFRESH_INTERVAL);
</script>
