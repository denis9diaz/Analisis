<div class="flex items-start justify-center min-h-screen bg-gray-50 pt-20 px-4 text-gray-800">
  <div class="w-full max-w-md bg-white p-8 rounded-2xl shadow-xl">
    <h2 class="text-2xl font-bold mb-6 text-center text-gray-800">Recuperar contraseña</h2>

    <form id="recovery-form" class="space-y-4">
      <div>
        <label class="block text-sm text-gray-700 mb-1">Correo electrónico</label>
        <input type="email" id="email" class="w-full border border-gray-300 rounded px-3 py-2 text-sm" required />
      </div>

      <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white rounded py-2 text-sm">
        Enviar instrucciones
      </button>
    </form>

    <p class="text-sm text-center text-gray-500 mt-6">
      Recibirás un correo con una contraseña temporal si el correo está registrado.
    </p>

    <!-- Toast -->
    <div
      id="toast"
      class="fixed bottom-6 right-6 text-white px-4 py-2 rounded shadow-md text-sm opacity-0 transition-opacity duration-300 pointer-events-none z-50"
    ></div>
  </div>
</div>

<script type="module">
  const form = document.getElementById("recovery-form");
  const emailInput = document.getElementById("email");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const res = await fetch("http://localhost:8000/api/auth/send-temp-password/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ email: emailInput.value })
    });

    if (res.ok) {
      showToast("Contraseña temporal enviada. Revisa tu correo", "success");
      emailInput.value = "";

      setTimeout(() => {
        window.location.href = "/login"; // puedes cambiar por "/" si prefieres ir al home
      }, 2500);
    } else {
      showToast("No se pudo enviar el correo", "error");
    }
  });

  function showToast(message = "Acción completada", type = "success") {
    const toast = document.getElementById("toast");

    const colorClasses = {
      success: "bg-green-600",
      error: "bg-red-600",
      info: "bg-blue-600",
      warning: "bg-yellow-500 text-black",
    };

    toast.className =
      "fixed bottom-6 right-6 text-white px-4 py-2 rounded shadow-md text-sm opacity-0 transition-opacity duration-300 pointer-events-none z-50";

    toast.classList.add(colorClasses[type] || colorClasses.success);
    toast.textContent = message;

    toast.classList.remove("opacity-0");
    toast.classList.add("opacity-100");

    setTimeout(() => {
      toast.classList.add("opacity-0");
      toast.classList.remove("opacity-100");
    }, 2500);
  }
</script>
