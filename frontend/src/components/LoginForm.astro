<div
  class="flex items-start justify-center min-h-screen bg-gray-200 pt-20 px-4"
>
  <div class="w-full max-w-md bg-white p-8 rounded-2xl shadow-xl">
    <h2 class="text-2xl font-bold mb-6 text-center text-gray-800">
      Inicio sesión
    </h2>
    <form id="login-form" class="space-y-5">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1" for="email">
          Usuario o correo electrónico
        </label>
        <input
          type="text"
          id="email"
          spellcheck="false"
          class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm text-gray-700"
          placeholder="Usuario o correo electrónico"
          required
        />
      </div>
      <div>
        <label
          class="block text-sm font-medium text-gray-700 mb-1"
          for="password"
        >
          Contraseña
        </label>
        <div class="relative">
          <input
            type="password"
            id="password"
            spellcheck="false"
            class="w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm text-gray-700"
            placeholder="Tu contraseña"
            required
          />
          <button
            type="button"
            id="toggle-password"
            class="absolute inset-y-0 right-3 px-2 text-gray-500 text-lg"
            tabindex="-1"
          >
            <i id="eye-icon" class="fa-solid fa-eye-slash"></i>
          </button>
        </div>
      </div>
      <button
        type="submit"
        class="w-full bg-blue-600 text-white py-2 rounded-lg font-semibold hover:bg-blue-700 transition duration-300"
      >
        Entrar
      </button>

      <!-- ✅ Enlace a recuperación -->
      <p class="text-sm text-center text-gray-500 mt-2">
        ¿Olvidaste tu contraseña?
        <a href="/recuperar-contraseña" class="text-blue-600 hover:underline">
          Recupérala aquí
        </a>
      </p>
    </form>

    <!-- ✅ Reenviar verificación -->
    <div id="resend-verification" class="hidden mt-4 text-center">
      <p class="text-sm text-gray-600 mb-2">
        ¿No recibiste el correo de verificación?
      </p>
      <button
        id="resend-btn"
        class="bg-gray-100 hover:bg-gray-200 text-sm text-gray-800 px-4 py-2 rounded-lg shadow"
      >
        Reenviar correo de verificación
      </button>
    </div>
  </div>
</div>

<!-- ✅ Toast visual -->
<div
  id="toast"
  class="fixed top-36 left-1/2 -translate-x-1/2 px-6 py-3 rounded-xl shadow-lg opacity-0 transition-all duration-300 pointer-events-none z-50 text-sm font-medium bg-white border text-gray-800"
>
  Mensaje dinámico
</div>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const API_URL = "http://127.0.0.1:8000";

    const form = document.getElementById("login-form");

    const toggle = document.getElementById("toggle-password");
    const passwordInput = document.getElementById("password");
    const icon = document.getElementById("eye-icon");

    const resendBtn = document.getElementById("resend-btn");
    let resendListenerAttached = false;

    toggle.addEventListener("click", () => {
      const hidden = passwordInput.type === "password";
      passwordInput.type = hidden ? "text" : "password";
      icon.className = hidden ? "fa-solid fa-eye" : "fa-solid fa-eye-slash";
    });

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const username = document.getElementById("email").value.trim();
      const password = passwordInput.value;

      // Ocultar posible anterior
      document.getElementById("resend-verification").classList.add("hidden");

      try {
        const res = await fetch(`${API_URL}/api/auth/login/`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ username, password }),
        });

        const contentType = res.headers.get("content-type");
        if (!contentType || !contentType.includes("application/json")) {
          throw new Error("La respuesta no es JSON. Probablemente es HTML.");
        }

        const data = await res.json();

        if (!res.ok) {
          // Si es un error de verificación, mostrar botón de reenvío
          if (
            data.error === "Cuenta sin verificar. Revisa tu correo." ||
            data.error?.toLowerCase().includes("sin verificar")
          ) {
            document
              .getElementById("resend-verification")
              .classList.remove("hidden");

            if (!resendListenerAttached) {
              resendListenerAttached = true;

              resendBtn.addEventListener("click", async () => {
                try {
                  resendBtn.disabled = true;
                  resendBtn.textContent = "Enviando...";

                  const r = await fetch(
                    `${API_URL}/api/auth/resend-verification/`,
                    {
                      method: "POST",
                      headers: { "Content-Type": "application/json" },
                      body: JSON.stringify({ email: username }),
                    }
                  );

                  if (r.ok) {
                    showToast("Correo reenviado correctamente", "success");
                    resendBtn.textContent = "Correo enviado";
                  } else {
                    showToast("No se pudo reenviar el correo", "error");
                    resendBtn.textContent = "Reenviar correo de verificación";
                    resendBtn.disabled = false;
                  }
                } catch (err) {
                  showToast("Error al reenviar el correo", "error");
                  resendBtn.textContent = "Reenviar correo de verificación";
                  resendBtn.disabled = false;
                }
              });
            }
          }

          showToast(data.error || "Usuario o contraseña incorrectos", "error");
          return;
        }

        // Login correcto
        localStorage.setItem("access_token", data.access);
        localStorage.setItem("refresh_token", data.refresh);
        localStorage.setItem("username", data.username);
        showToast("Inicio de sesión correcto", "success");
        setTimeout(() => {
          window.location.href = "/";
        }, 1000);
      } catch (err) {
        console.error("Error de conexión al backend:", err);
        if (
          err instanceof TypeError &&
          err.message.includes("Failed to fetch")
        ) {
          showToast("No se pudo conectar con el servidor", "error");
        } else {
          showToast("Error inesperado", "error");
        }
      }
    });

    function showToast(message = "Acción completada", type = "success") {
      const toast = document.getElementById("toast");
      if (!toast) return;

      const styleMap = {
        success: "bg-emerald-100 text-emerald-800 border border-emerald-300",
        error: "bg-rose-100 text-rose-800 border border-rose-300",
        info: "bg-blue-100 text-blue-800 border border-blue-300",
        warning: "bg-yellow-100 text-yellow-800 border border-yellow-300",
      };

      toast.className =
        "fixed top-36 left-1/2 -translate-x-1/2 px-6 py-3 rounded-xl shadow-lg opacity-0 transition-all duration-300 pointer-events-none z-50 text-sm font-medium";

      toast.classList.add(...(styleMap[type] || styleMap.success).split(" "));
      toast.textContent = message;

      toast.classList.remove("opacity-0");
      toast.classList.add("opacity-100");

      setTimeout(() => {
        toast.classList.remove("opacity-100");
        toast.classList.add("opacity-0");
      }, 3000);
    }
  });
</script>
